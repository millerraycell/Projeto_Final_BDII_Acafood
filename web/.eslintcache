[{"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/App.tsx":"1","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/landing.tsx":"2","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Dashboard.tsx":"3","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/services/api.ts":"4","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Listar.tsx":"5","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/routes.tsx":"6","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/services/neoApi.ts":"7","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/services/mongoApi.ts":"8","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Recomendations.tsx":"9","/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Like.tsx":"10"},{"size":195,"mtime":1608179136000,"results":"11","hashOfConfig":"12"},{"size":3024,"mtime":1608320800139,"results":"13","hashOfConfig":"12"},{"size":1421,"mtime":1608318865292,"results":"14","hashOfConfig":"12"},{"size":115,"mtime":1608295514234,"results":"15","hashOfConfig":"12"},{"size":2039,"mtime":1608323826515,"results":"16","hashOfConfig":"12"},{"size":787,"mtime":1608319007776,"results":"17","hashOfConfig":"12"},{"size":121,"mtime":1608295524358,"results":"18","hashOfConfig":"12"},{"size":125,"mtime":1608295519754,"results":"19","hashOfConfig":"12"},{"size":1604,"mtime":1608325737264,"results":"20","hashOfConfig":"12"},{"size":3574,"mtime":1608325730992,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1wzg2vg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/App.tsx",[],["44","45"],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/landing.tsx",[],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Dashboard.tsx",[],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/services/api.ts",[],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Listar.tsx",["46","47"],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/routes.tsx",[],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/services/neoApi.ts",[],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/services/mongoApi.ts",[],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Recomendations.tsx",["48"],"/home/miller/Documentos/Faculdade/Banco_dados_II/Exercicios/Final_Project_BDII_2020.1-main/web/src/pages/Like.tsx",["49"],"import React, { useState, FormEvent } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport \"../styles/pages/like.css\";\n\nimport neoApi from \"../services/neoApi\";\nimport mongoApi from \"../services/mongoApi\";\nimport img_acafood from '../images/Acafood-logo-1.png';\nimport { FiArrowLeft } from \"react-icons/fi\";\n\nexport default function Like() {\n  const history = useHistory();\n\n  const username = history.location.state;\n\n  console.log(username);\n\n  const [food, setFood] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [origin, setOrigin] = useState(\"\");\n\n  const handleReturn = (e : FormEvent)=>{\n    e.preventDefault();\n\n    history.push({pathname: \"/dashboard\", state:username});\n  }\n\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n\n    const data = {\"food\":food};\n    const relatData = {\"name\":username, \"food\":food};\n\n    const validate = await neoApi.get(`/neo4j/${food}/verifica`);\n\n    const verdade = validate.data.comida;\n\n    const mongoData = {\n      \"name\":food,\n      \"type\":type,\n      \"origin\":origin,\n    };\n\n    console.log(verdade);\n\n    if (verdade.length !== 0){\n        alert(\"O usuário já cadastou esse prato\")\n        \n    }\n    else{\n        if (verdade[0] != null){\n    \n          const relat = await neoApi.post(\"/neo4j/\",relatData);\n          console.log(\"teste\",relat);\n    \n        }else{\n          const mongoteste = await mongoApi.post(\"/mongo/create\", mongoData);\n          const teste = await neoApi.post(\"/neo4j/create_food/\", data);\n          const relat = await neoApi.post(\"/neo4j/\",relatData);\n    \n          console.log(\"teste2\", teste, relat);\n          console.log(mongoteste);\n        }\n        alert(\"Cadastro realizado com sucesso!\");\n    \n        history.push({pathname: \"/dashboard\", state:username});\n    }\n\n  };\n\n  return (\n    <div id=\"page-like-food\">\n\n      <main>\n        <div className=\"top-page\">\n          <button type = \"submit\" onClick = {handleReturn}  className=\"go-back\">\n            <FiArrowLeft size={32} color=\"#000000\" ></FiArrowLeft>\n          </button>\n\n          <img src={img_acafood} alt=\"Acafood\"/>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"like-food-form\">\n          <fieldset>\n            <h1>Inserir novo prato</h1>\n            \n            <div className=\"input-block\">\n              <label htmlFor=\"prato\">Nome do Prato</label>\n              <input\n                className = \"text-field\"\n                id=\"prato\"\n                value={food}\n                required\n                onChange={(e) => setFood(e.target.value)}\n              />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"type\">Tipo do Prato</label>\n              <input\n                className = \"text-field\"\n                id=\"type\"\n                value={type}\n                required\n                onChange={(e) => setType(e.target.value)}\n              />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"origin\">Origem do Prato</label>\n              <input\n                className = \"text-field\"\n                id=\"origin\"\n                value={origin}\n                required\n                onChange={(e) => setOrigin(e.target.value)}\n              />\n            </div>\n          </fieldset>\n\n        </form>\n\n        <div className=\"btnContainer\">\n          <button  onClick={handleSubmit} className=\"confirm-button\" type=\"submit\">\n            Confirmar\n          </button>\n        </div>\n\n      </main>\n    </div>\n  );\n}\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":5,"column":8,"nodeType":"56","messageId":"57","endLine":5,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":35,"column":5,"nodeType":"60","endLine":35,"endColumn":7,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":41,"column":5,"nodeType":"60","endLine":41,"endColumn":7,"suggestions":"63"},{"ruleId":"54","severity":1,"message":"64","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'mongoApi' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populate'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'dale'. Either include it or remove the dependency array.",["68"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [populate]",{"range":"73","text":"74"},"Update the dependencies array to be: [dale]",{"range":"75","text":"76"},[821,823],"[populate]",[1095,1097],"[dale]"]